services:
  # launch a Linux command line with gears on pre-compiled geant4
  gears: # docker-compose run gears
    image: physino/gears
    command: /usr/bin/bash
    profiles: [ "gears" ]
    platform: linux/amd64
    environment: # https://docs.docker.com/desktop/networking
      - DISPLAY=host.docker.internal:0.0
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - .:/root/gears
    build: INSTALL # docker-compose build gears

  # launch a Linux command line with pre-compiled geant4
  g4: # docker-compose run g4
    image: physino/geant4:gears
    command: /usr/bin/bash
    environment: # https://docs.docker.com/desktop/networking
      - DISPLAY=host.docker.internal:0.0
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - .:/root/gears
    working_dir: /root/gears
    profiles: [ "g4" ] # https://docs.docker.com/compose/profiles
    # https://docs.docker.com/compose/compose-file/build/
    build: INSTALL/Geant4 # docker-compose build g4

  # launch a Linux command line where cern root is available
  root: # docker-compose run root
    image: physino/root
    command: /usr/bin/bash
    profiles: [ "root" ]
    environment:
      - DISPLAY=host.docker.internal:0.0
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - .:/root/gears
    # https://docs.docker.com/compose/compose-file/#working_dir
    working_dir: /root/gears
    build: INSTALL/ROOT/ # docker-compose build root

  # launch a Jupyter notebook service to analyze data with ROOT or Python
  notebook: # docker-compose up
    image: physino/root:notebook
    command: /usr/bin/root --notebook --allow-root --no-browser --ip=0.0.0.0
    ports: [ "8888:8888" ]
    volumes: [".:/root/gears"]
    build: INSTALL/ROOT/notebook # docker-compose build notebook

  # launch a Linux command line where the HepRApp viewer can be used
  vis: # docker-compose run vis
    image: physino/g4vis
    command: /usr/bin/bash
    profiles: [ "vis" ]
    environment:
      - DISPLAY=host.docker.internal:0.0
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - .:/root/gears
    # https://docs.docker.com/compose/compose-file/#working_dir
    working_dir: /root/gears
    build: tutorials/detector/visualization/ # docker-compose build vis

  # launch a Linux command line to run v2x
  x3d: # docker compose run x3d
    image: physino/root
    command: /usr/bin/bash
    ports: [ "8888:8888" ]
    volumes: [ ".:/root/gears" ]
    profiles: [ "x3d" ]
